/* this is a placeholder so that xgettext can find the translatable
 * strings. This file is automatically generated, look at
 * ./create_placeholder
 */
char *foobar[] = { 
N_("urpmf version %s"),
N_("Copyright (C) 1999,2000,2001 MandrakeSoft."),
N_("This is free software and may be redistributed under the terms of the GNU GPL."),
N_("usage: urpmf [options] <file>"),
N_("  --quiet         - do not print tag name (default if no tag given on command"),
N_("                    line, incompatible with interactive mode)."),
N_("  --all           - print all tags."),
N_("  --name          - print tag name: rpm filename (assumed if no tag given on"),
N_("                    command line but without package name)."),
N_("  --group         - print tag group: group."),
N_("  --size          - print tag size: size."),
N_("  --serial        - print tag serial: serial."),
N_("  --summary       - print tag summary: summary."),
N_("  --description   - print tag description: description."),
N_("  --provides      - print tag provides: all provides (mutliple lines)."),
N_("  --requires      - print tag requires: all requires (multiple lines)."),
N_("  --files         - print tag files: all files (multiple lines)."),
N_("  --conflicts     - print tag conflicts: all conflicts (multiple lines)."),
N_("  --obsoletes     - print tag obsoletes: all obsoletes (multiple lines)."),
N_("  --prereqs       - print tag prereqs: all prereqs (multiple lines)."),
N_("usage: urpmf [options] <file>"),
N_("try urpmf --help for more options"),
N_("urpmi is not installed"),
N_("reading synthesis file [%s]"),
N_("retrieving source hdlist (or synthesis)..."),
N_("unable to write config file [%s]"),
N_("retrieving rpms files..."),
N_("using different removable device [%s] for \"%s\""),
N_("nothing to write in list file for \"%s\""),
N_("unable to find list file for \"%s\", medium ignored"),
N_("unable to parse hdlist file of \"%s\""),
N_("nothing written in list file for \"%s\""),
N_("read provides file [%s]"),
N_("package %s is not found."),
N_("unable to write compss file [%s]"),
N_("unmounting %s"),
N_("removing %d obsolete headers in cache"),
N_("no hdlist file found for medium \"%s\""),
N_("medium \"%s\" tries to use an already used hdlist, medium ignored"),
N_("unable to use name \"%s\" for unnamed medium because it is already used"),
N_("unable to take medium \"%s\" into account as no list file [%s] exists"),
N_("keeping only files referenced in provides"),
N_("unable to build synthesis file for medium \"%s\""),
N_("found %d headers in cache"),
N_("unable to read provides file [%s]"),
N_("avoid selecting %s as its locales language is not already selected"),
N_(""
"removing %s to upgrade to %s ...\n"
"  since it will not be updated otherwise"
""),
N_("medium \"%s\" already exists"),
N_("unable to write list file of \"%s\""),
N_("write config file [%s]"),
N_("no package named %s"),
N_("unable to read compss file [%s]"),
N_("unable to find hdlist file for \"%s\", medium ignored"),
N_("built hdlist synthesis file for medium \"%s\""),
N_("computing dependencies"),
N_("retrieve of [%s] failed"),
N_("write provides file [%s]"),
N_("mounting %s"),
N_("unable to take care of medium \"%s\" as list file is already used by another medium"),
N_("reading hdlist file [%s]"),
N_("wget failed: exited with %d or signal %d\n"),
N_("write compss file [%s]"),
N_("read depslist file [%s]"),
N_("unable to retrieve pathname for removable medium \"%s\""),
N_("malformed input: [%s]"),
N_("there are multiple packages with the same rpm filename \"%s\""),
N_("medium \"%s\" tries to use an already used list, medium ignored"),
N_("unable to write provides file [%s]"),
N_("unable to access hdlist file of \"%s\", medium ignored"),
N_("unable to find all synthesis file, using parsehdlist server"),
N_("unable to register rpm file"),
N_("unable to inspect list file for \"%s\", medium ignored"),
N_("too many mount points for removable medium \"%s\""),
N_("incoherent list file for \"%s\", medium ignored"),
N_("copy of [%s] failed"),
N_("trying to remove inexistent medium \"%s\""),
N_("retrieving description file..."),
N_("unable to parse correctly [%s]"),
N_("read synthesis file [%s]"),
N_("unable to read depslist file [%s]"),
N_("read compss file [%s]"),
N_("no webfetch (curl or wget for example) found\n"),
N_("syntax error in config file at line %s"),
N_("building hdlist [%s]"),
N_("unable to read rpm file [%s] from medium \"%s\""),
N_("error registering local packages"),
N_("taking removable device as \"%s\""),
N_("...retrieving failed: %s"),
N_("incoherent medium \"%s\" marked removable but not really"),
N_("unable to build hdlist: %s"),
N_("medium \"%s\" is not selected"),
N_("invalid rpm file name [%s]"),
N_("unknown data associated with %s"),
N_("trying to bypass existing medium \"%s\", avoiding"),
N_("write depslist file [%s]"),
N_("unable to access list file of \"%s\", medium ignored"),
N_("avoid selecting %s as not enough files will be updated"),
N_("unable to access rpm file [%s]"),
N_("unable to write depslist file [%s]"),
N_(""
"removing %s to upgrade to %s ...\n"
"  since it will not upgrade correctly!"
""),
N_("relocated %s entries in depslist"),
N_("unable to access medium \"%s\""),
N_("unable to parse correctly [%s] on value \"%s\""),
N_("trying to select inexistent medium \"%s\""),
N_("The following packages contain %s: %s"),
N_("no rpm files found from [%s]"),
N_("...retrieving done"),
N_("selecting %s using obsoletes"),
N_("curl failed: exited with %d or signal %d\n"),
N_("selecting %s by selection on files"),
N_("curl is missing\n"),
N_("wget is missing\n"),
N_("unable to determine medium of this hdlist file [%s]"),
N_("Cancel"),
N_("  --help         - print this help message.\n"),
N_("everything already installed"),
N_("urpmi: unknown option \"-%s\", check usage with --help\n"),
N_("One of the following packages is needed:"),
N_("  --update       - use only update media.\n"),
N_(""
"Installation failed, some files are missing.\n"
"You may want to update your urpmi database"
""),
N_("  --auto         - automatically select a good package in choices.\n"),
N_("Nn"),
N_("Installation failed"),
N_("  --auto-select  - automatically select packages for upgrading the system.\n"),
N_("Yy"),
N_("  --X            - use X interface.\n"),
N_("To satisfy dependencies, the following packages are going to be installed (%d MB)"),
N_("Try installation without checking dependencies? (y/N) "),
N_(""
"  --best-output  - choose best interface according to the environment:\n"
"                   X or text mode.\n"
""),
N_("  -p             - allow search in provides to find package.\n"),
N_("  -v             - verbose mode.\n"),
N_("  -q             - quiet mode.\n"),
N_("What is your choice? (1-%d) "),
N_("  --wget         - use wget to retrieve distant files.\n"),
N_(""
"urpmi version %s\n"
"Copyright (C) 1999, 2000, 2001 MandrakeSoft.\n"
"This is free software and may be redistributed under the terms of the GNU GPL.\n"
"usage:\n"
""),
N_("Try installation even more strongly (--force)? (y/N) "),
N_("Ok"),
N_("  --force        - force invocation even if some packages do not exist.\n"),
N_("Sorry, bad choice, try again\n"),
N_("  names or rpm files (only for root) given on command line are installed.\n"),
N_(" (Y/n) "),
N_("  -a             - select all matches on command line.\n"),
N_("  --curl         - use curl to retrieve distant files.\n"),
N_("installing %s\n"),
N_("Only superuser is allowed to install local packages"),
N_("Please insert the medium named \"%s\" on device [%s]"),
N_("Is it OK?"),
N_("unable to get source packages, aborting"),
N_("Only superuser is allowed to install packages"),
N_("One of the following packages is needed to install %s:"),
N_("Press Enter when it's done..."),
N_(""
"usage: urpmi.addmedia [options] <name> <url> [with <relative_path>]\n"
"where <url> is one of\n"
"       file://<path>\n"
"       ftp://<login>:<password>@<host>/<path> with <relative filename of hdlist>\n"
"       ftp://<host>/<path> with <relative filename of hdlist>\n"
"       http://<host>/<path> with <relative filename of hdlist>\n"
"       removable://<path>\n"
"and [options] are from\n"
""),
N_("unable to create medium \"%s\"\n"),
N_("unable to update medium \"%s\"\n"),
N_(""
"\n"
"unknown options '%s'\n"
""),
N_("  --curl         - use curl to retrieve distant files.\n"),
N_("  -c             - clean headers cache directory.\n"),
N_(""
"%s\n"
"<relative path of hdlist> missing\n"
""),
N_("  -f             - force generation of hdlist files.\n"),
N_("  --wget         - use wget to retrieve distant files.\n"),
N_(""
"%s\n"
"`with' missing for ftp media\n"
""),
N_(""
"usage: urpmi.update [options] <name> ...\n"
"where <name> is a medium name to update.\n"
""),
N_(""
"\n"
"unknown options '%s'\n"
""),
N_("  --curl         - use curl to retrieve distant files.\n"),
N_(""
"the entry to update is missing\n"
"(one of %s)\n"
""),
N_("  -c             - clean headers cache directory.\n"),
N_("  -f             - force generation of hdlist files.\n"),
N_("  --wget         - use wget to retrieve distant files.\n"),
N_("nothing to update (use urpmi.addmedia to add a media)\n"),
N_("  -a             - select all non-removable media.\n"),
N_("nothing to remove (use urpmi.addmedia to add a media)\n"),
N_(""
"the entry to remove is missing\n"
"(one of %s)\n"
""),
N_(""
"usage: urpmi.removemedia [-a] <name> ...\n"
"where <name> is a medium name to remove.\n"
"   -a    select all media.\n"
"\n"
"unknown options '%s'\n"
""),
N_("  -h             - print this help message.\n"),
N_("some package have to be removed for being upgraded, this is not supported yet\n"),
N_("  -g             - print groups too with name.\n"),
N_("urpmq: cannot read rpm file \"%s\"\n"),
N_("  names or rpm files given on command line are queried.\n"),
N_("  --update       - use only update media.\n"),
N_("  -r             - print version and release too with name.\n"),
N_("  -f             - print version, release and arch with name.\n"),
N_(""
"urpmq version %s\n"
"Copyright (C) 2000, 2001 MandrakeSoft.\n"
"This is free software and may be redistributed under the terms of the GNU GPL.\n"
"usage:\n"
""),
N_("  -d             - extend query to package dependencies.\n"),
N_("  --sources      - give all source packages before downloading (root only).\n"),
N_("  -c             - choose complete method for resolving requires closure.\n"),
N_("  --auto-select  - automatically select packages for upgrading the system.\n"),
N_("  --force        - force invocation even if some packages do not exist.\n"),
N_("urpmq: unknown option \"-%s\", check usage with --help\n"),
N_(""
"  --headers      - extract headers for package listed from urpmi db to\n"
"                   stdout (root only).\n"
""),
N_("  -p             - allow search in provides to find package.\n"),
N_("  -v             - verbose mode.\n"),
N_("unable to get source packages, aborting"),
N_("  -u             - remove package if a better version is already installed.\n"),
};
